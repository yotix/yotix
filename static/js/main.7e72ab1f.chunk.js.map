{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Python","props","Blank","viewBox","xmlns","d","fill","AWS","App","Grommet","className","Box","direction","style","borderLeft","height","width","filter","pad","justify","background","src","alt","alignContent","flex","align","gap","Text","size","margin","left","Java","data-for","data-tip","color","Js","Golang","Html5","Reactjs","Css3","Anchor","href","icon","Linkedin","Mail","Github","target","id","place","effect","multiline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e72ab1f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Box, Grommet, Text, Anchor } from \"grommet\";\nimport {\n    Linkedin,\n    Mail,\n    Github,\n    Java,\n    Js,\n    Golang,\n    Reactjs,\n    Css3,\n    Html5,\n    Blank,\n} from \"grommet-icons\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Python = (props) => (\n    <Blank {...props}>\n        <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                d='M9.09399 11.2618H14.0184C15.3879 11.2618 16.4807 10.1321 16.4807 8.75804V4.05952C16.4807 2.72241 15.3556 1.72182 14.0184 1.49588C12.3677 1.22382 10.5741 1.23765 9.09399 1.50043C7.00983 1.86934 6.63178 2.6394 6.63178 4.06416V5.06977H11.5608V6.56785H4.7828C3.34885 6.56785 2.09457 7.43007 1.70269 9.06699C1.25082 10.9436 1.23239 12.1148 1.70269 14.0745C2.05313 15.5316 2.88769 16.5736 4.32169 16.5736H6.01393V14.3235C6.01388 12.6959 7.42022 11.2618 9.09399 11.2618Z'\n                fill='#347AB4'\n            />\n            <path\n                d='M22.2645 9.81433C21.9094 8.38956 21.2363 7.31519 19.8023 7.31519H17.9534V9.50078C17.9534 11.1976 16.5147 12.6269 14.8732 12.6269H9.94876C8.60232 12.6269 7.48651 13.7798 7.48651 15.1307V19.8247C7.48651 21.1617 8.64845 21.9456 9.94876 22.3284C11.5072 22.7848 13.0057 22.8679 14.8732 22.3284C16.1136 21.9686 17.3355 21.2448 17.3355 19.8247V18.8404H12.4157V17.3209H19.8022C21.2363 17.3209 21.7665 16.3203 22.2644 14.8218C22.7809 13.2771 22.7579 11.7924 22.2645 9.81433Z'\n                fill='#FFCA1D'\n            />\n            <path\n                d='M8.78508 4.19973C8.29388 4.19973 7.89563 3.79702 7.89563 3.30141C7.90004 2.80135 8.29388 2.39865 8.78508 2.39865C9.27188 2.39865 9.67458 2.80576 9.67458 3.30141C9.67454 3.79702 9.27629 4.19973 8.78508 4.19973Z'\n                fill='white'\n            />\n            <path\n                d='M14.7613 21.5661C14.2701 21.5661 13.8718 21.1634 13.8718 20.6677C13.8763 20.1677 14.2701 19.765 14.7613 19.765C15.2481 19.765 15.6508 20.1721 15.6508 20.6677C15.6508 21.1634 15.2526 21.5661 14.7613 21.5661Z'\n                fill='white'\n            />\n        </svg>\n    </Blank>\n);\n\nconst AWS = (props) => (\n    <Blank {...props}>\n        <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n            <path\n                d='M8.57399 11.904C8.5071 11.7732 8.44702 11.639 8.39399 11.502C8.35145 11.3395 8.33127 11.172 8.33399 11.004V11.004V9.204C8.35578 8.94996 8.32492 8.69416 8.24337 8.45259C8.16181 8.21101 8.0313 7.98885 7.85999 7.8C7.44956 7.46397 6.92465 7.30047 6.39599 7.344C6.10254 7.34219 5.8101 7.3785 5.52599 7.452C5.27375 7.51161 5.02989 7.60231 4.79999 7.722C4.73956 7.74965 4.68622 7.79068 4.64399 7.842C4.6151 7.90165 4.60268 7.96794 4.60799 8.034V8.31C4.60799 8.424 4.64399 8.484 4.72199 8.484H4.81199L5.02799 8.4C5.22375 8.32343 5.42415 8.25931 5.62799 8.208C5.82466 8.16158 6.02593 8.13742 6.22799 8.136C6.55377 8.10255 6.88002 8.19484 7.13999 8.394C7.33916 8.64702 7.43173 8.96777 7.39799 9.288V9.696C7.17599 9.642 6.96599 9.6 6.75599 9.57C6.55699 9.54424 6.35665 9.53021 6.15599 9.528C5.66636 9.50125 5.18392 9.65495 4.79999 9.96C4.63302 10.0993 4.50022 10.2751 4.41181 10.4737C4.32339 10.6724 4.28172 10.8887 4.28999 11.106C4.28033 11.304 4.31217 11.5018 4.38347 11.6868C4.45477 11.8717 4.56394 12.0397 4.70399 12.18C4.85274 12.3225 5.02892 12.4332 5.22181 12.5054C5.4147 12.5776 5.62026 12.6098 5.82599 12.6C6.14028 12.6048 6.45156 12.5382 6.73635 12.4051C7.02113 12.2721 7.27199 12.0761 7.46999 11.832C7.52174 11.9452 7.57983 12.0554 7.64399 12.162C7.70083 12.2547 7.76719 12.3411 7.84199 12.42C7.86343 12.4435 7.88933 12.4625 7.91817 12.4759C7.94701 12.4893 7.97822 12.4968 8.00999 12.498C8.06207 12.4989 8.11289 12.482 8.15399 12.45L8.50799 12.216C8.53413 12.2034 8.55708 12.1851 8.57513 12.1624C8.59318 12.1398 8.60585 12.1133 8.6122 12.085C8.61855 12.0567 8.61841 12.0273 8.6118 11.9991C8.60518 11.9709 8.59225 11.9445 8.57399 11.922V11.904ZM7.41599 10.548C7.41932 10.7117 7.40117 10.8751 7.36199 11.034C7.33576 11.1665 7.28043 11.2915 7.19999 11.4C7.05663 11.562 6.87517 11.6857 6.67199 11.76C6.47871 11.8251 6.27594 11.8575 6.07199 11.856C5.90799 11.8491 5.74974 11.7936 5.61735 11.6965C5.48496 11.5995 5.38441 11.4652 5.32846 11.3109C5.27252 11.1566 5.26371 10.9891 5.30315 10.8298C5.3426 10.6704 5.42852 10.5264 5.54999 10.416C5.79397 10.2532 6.08558 10.1771 6.37799 10.2C6.55199 10.2 6.72599 10.2 6.90599 10.23C7.08599 10.26 7.25399 10.29 7.41599 10.326V10.548ZM10.2 12.18C10.2172 12.263 10.2566 12.3397 10.314 12.402C10.3781 12.4432 10.454 12.4621 10.53 12.456H11.01C11.0879 12.463 11.166 12.444 11.232 12.402C11.2893 12.338 11.3268 12.2588 11.34 12.174L12.198 8.574L13.068 12.174C13.0756 12.2575 13.1116 12.3359 13.17 12.396C13.2363 12.4429 13.3172 12.4642 13.398 12.456H13.878C13.9527 12.4599 14.0266 12.4388 14.088 12.396C14.1482 12.3372 14.1899 12.2621 14.208 12.18L15.6 7.866C15.6204 7.82261 15.6326 7.77582 15.636 7.728C15.6385 7.69806 15.6385 7.66795 15.636 7.638C15.6391 7.61918 15.6377 7.59988 15.6319 7.58171C15.626 7.56354 15.616 7.54703 15.6025 7.53354C15.589 7.52004 15.5725 7.50996 15.5543 7.50413C15.5361 7.4983 15.5168 7.49688 15.498 7.5H14.976C14.9004 7.49763 14.8256 7.51632 14.76 7.554C14.707 7.61619 14.67 7.69031 14.652 7.77L13.68 11.514L12.786 7.8C12.7758 7.71899 12.7401 7.64333 12.684 7.584C12.6158 7.54191 12.5358 7.52297 12.456 7.53H12C11.9601 7.5231 11.9193 7.52485 11.8802 7.53514C11.8411 7.54542 11.8046 7.564 11.7733 7.58961C11.742 7.61522 11.7166 7.64726 11.6988 7.68356C11.6809 7.71986 11.6711 7.75958 11.67 7.8L10.8 11.472L9.86999 7.8C9.85299 7.71997 9.81581 7.64562 9.76199 7.584C9.69637 7.54109 9.618 7.52202 9.53999 7.53H8.99999C8.90999 7.53 8.86799 7.578 8.86799 7.668C8.8729 7.74397 8.88908 7.81879 8.91599 7.89L10.2 12.18ZM16.2 12.282C16.4026 12.3855 16.6187 12.4603 16.842 12.504C17.1231 12.5708 17.411 12.605 17.7 12.606C17.9725 12.607 18.2436 12.5665 18.504 12.486C18.7227 12.4228 18.9267 12.3168 19.104 12.174C19.2744 12.0419 19.4137 11.8739 19.512 11.682C19.6109 11.4805 19.6602 11.2584 19.656 11.034C19.66 10.7524 19.5691 10.4777 19.398 10.254C19.1894 10.0024 18.9121 9.81689 18.6 9.72L17.808 9.468C17.5887 9.40638 17.3844 9.30017 17.208 9.156C17.1541 9.10525 17.1113 9.04384 17.0824 8.97567C17.0534 8.90749 17.039 8.83405 17.04 8.76C17.0345 8.66083 17.0562 8.56205 17.1028 8.4743C17.1493 8.38655 17.2189 8.31315 17.304 8.262C17.52 8.15457 17.7588 8.10105 18 8.106C18.37 8.09926 18.7369 8.1751 19.074 8.328C19.1397 8.36182 19.2107 8.38414 19.284 8.394C19.368 8.394 19.416 8.334 19.416 8.214V7.95C19.4201 7.88547 19.401 7.8216 19.362 7.77C19.3187 7.70894 19.261 7.65948 19.194 7.626C19.1189 7.58567 19.0406 7.55155 18.96 7.524C18.858 7.524 18.756 7.464 18.642 7.44L18.282 7.374H17.904C17.6669 7.36984 17.4304 7.40016 17.202 7.464C16.9856 7.52435 16.7823 7.62401 16.602 7.758C16.4362 7.87868 16.2989 8.03435 16.2 8.214C16.0997 8.39796 16.0481 8.60449 16.05 8.814C16.0526 9.10664 16.1494 9.39067 16.326 9.624C16.5569 9.90299 16.8696 10.1024 17.22 10.194L18.03 10.446C18.2393 10.4929 18.4333 10.592 18.594 10.734C18.6445 10.7855 18.6842 10.8465 18.711 10.9134C18.7378 10.9803 18.751 11.0519 18.75 11.124C18.7532 11.2312 18.7276 11.3372 18.6759 11.4311C18.6242 11.525 18.5482 11.6034 18.456 11.658C18.2059 11.7923 17.9234 11.8546 17.64 11.838C17.4163 11.8395 17.193 11.8174 16.974 11.772C16.7676 11.7299 16.5665 11.6655 16.374 11.58L16.236 11.52H16.134C16.05 11.52 16.002 11.58 16.002 11.694V12C16.0025 12.054 16.0148 12.1072 16.038 12.156C16.0888 12.2153 16.1554 12.2589 16.23 12.282H16.2ZM18.492 14.898C16.4931 15.7395 14.3488 16.1819 12.18 16.2C9.26278 16.1965 6.39676 15.4335 3.86399 13.986C3.65999 13.866 3.50399 14.076 3.67199 14.232C5.95512 16.2907 8.92583 17.4208 12 17.4C14.4252 17.4086 16.7966 16.6851 18.804 15.324C19.092 15.096 18.828 14.76 18.522 14.898H18.492ZM20.292 13.848C20.094 13.602 18.366 13.386 17.292 14.124C17.13 14.244 17.16 14.4 17.334 14.376C17.934 14.304 19.254 14.148 19.488 14.448C19.722 14.748 19.224 15.99 19.002 16.548C18.936 16.71 19.08 16.782 19.23 16.65C20.28 15.822 20.538 14.1 20.334 13.848H20.292Z'\n                fill='black'\n            />\n        </svg>\n    </Blank>\n);\n\nfunction App() {\n    return (\n        <Grommet className='App'>\n            <Box\n                direction='row'\n                style={{\n                    borderLeft: \"0\",\n                    height: \"100vh\",\n                    width: \"100%\",\n                    filter: \"blur(2px)\",\n                }}\n                pad='small'\n                width='medium'\n                justify='center'\n                background=\"url('static/img/code.png')\"\n            ></Box>\n            {/* <svg width=\"200\" height=\"200\"\n            xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">       \n            <image href=\"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\" height=\"200\" width=\"200\"/>\n          </svg> */}\n            <img className='circle' src='static/img/Circle.svg' alt='circle' />\n            <img\n                className='rectangle'\n                src='static/img/Rectangle.svg'\n                alt='rect'\n            />\n            <img className='triangle' src='static/img/Triangle.svg' alt='tri' />\n            <div className='content-hero'>\n                <Box\n                    direction='column'\n                    justify='center'\n                    alignContent='center'\n                    flex='grow'\n                    align='center'\n                >\n                    <Box className='hero-text' gap='small'>\n                        <Text size='xxlarge'>Yogesh Bhardwaj</Text>\n                        <Text size='large' margin={{ left: \"4.8rem\" }}>\n                            Tech Lead / Coder\n                        </Text>\n                        <Box direction='row' gap='small' justify='center'>\n                            <Java\n                                data-for='java'\n                                data-tip='Java'\n                                color='white'\n                                size='medium'\n                            />\n                            <Js\n                                data-for='js'\n                                data-tip='Javascript<br>ES6, Node JS, Express JS'\n                                color='plain'\n                                size='medium'\n                            />\n                            <Golang\n                                data-for='golang'\n                                data-tip='Golang: Buffalo'\n                                color='plain'\n                                size='medium'\n                            />\n                            <Html5\n                                data-for='html5'\n                                data-tip='Html 5'\n                                color='white'\n                                size='medium'\n                            />\n                            <Reactjs\n                                data-for='reactjs'\n                                data-tip='React Js<br>Redux, Recharts, Firebase'\n                                color='plain'\n                                size='medium'\n                            />\n                            <Css3\n                                data-for='css3'\n                                data-tip='CSS 3<br>Bootstrap, Semantic UI, Grommet'\n                                color='white'\n                                size='medium'\n                            />\n                            <Python\n                                data-for='python'\n                                data-tip='Python: Flask, Django, Pandas'\n                                color='plain'\n                                size='medium'\n                            />\n                            <AWS\n                                data-for='aws'\n                                data-tip='Amazon Web Services<br>EC2, RDS, ECS, S3, Account management'\n                                color='white'\n                                size='medium'\n                            />\n                        </Box>\n                    </Box>\n                </Box>\n                <div className='contact'>\n                    <Box\n                        direction='column'\n                        justify='center'\n                        align='center'\n                        flex='grow'\n                    >\n                        <Box\n                            direction='row'\n                            justify='center'\n                            align='center'\n                            gap='small'\n                            alignContent='center'\n                        >\n                            <Anchor\n                                data-for='linkedin'\n                                data-tip=\"Let's connect on LinkedIn\"\n                                href='https://www.linkedin.com/in/yotix'\n                                icon={<Linkedin color='plain' size='medium' />}\n                            />\n                            <Anchor\n                                data-for='mail'\n                                data-tip='Drop a mail, for inquires'\n                                href='mailto:yogesh.bhardwaj@hotmail.com?subject=Coding%20Requirements&body=Hey%20%7BReplace_with_Your_name%7D%2C%0D%0A%0D%0AI%20am%20looking%20for%20an%20Experienced%20Developer%20to%20improve%20%2F%20develop%20my%20Product.%0D%0A%7BDescription_of_project%7D%0D%0A%7BBudget%7D%0D%0A%7BProject%20Development%20Time%7D%0D%0A%7BPersonal%20Info%7D%0D%0A%0D%0A%23Salutations'\n                                icon={<Mail color='plain' size='medium' />}\n                            />\n                            <Anchor\n                                data-for='github'\n                                data-tip='View Github Profile for Code Samples'\n                                icon={<Github color='white' size='medium' />}\n                                href='https://github.com/yotix'\n                                target='_blank'\n                            />\n                        </Box>\n                        <Text size='xxlarge'>Contact</Text>\n                        <ReactTooltip\n                            id='linkedin'\n                            place={\"top\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='mail'\n                            place={\"top\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='github'\n                            place={\"top\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='java'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='js'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='golang'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='html5'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='reactjs'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='css3'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='python'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                        <ReactTooltip\n                            id='aws'\n                            place={\"bottom\"}\n                            effect={\"solid\"}\n                            multiline={true}\n                        />\n                    </Box>\n                </div>\n            </div>\n        </Grommet>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}